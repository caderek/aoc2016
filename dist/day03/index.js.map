{
  "version": 3,
  "sources": ["../../src/day03/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\"\nimport { chunk_ } from \"@arrows/array\"\nimport { rotate } from \"../utils/grid.js\"\n\nconst parseInputPart1 = (rawInput: string) =>\n  rawInput.split(\"\\n\").map((x) =>\n    x\n      .trim()\n      .split(/\\s+/)\n      .map(Number)\n      .sort((a, b) => a - b),\n  )\n\nconst parseInputPart2 = (rawInput: string) =>\n  chunk_(\n    3,\n    rotate\n      .left(rawInput.split(\"\\n\").map((x) => x.trim().split(/\\s+/).map(Number)))\n      .reverse()\n      .flat(),\n  ).map((x) => x.sort((a, b) => a - b))\n\nconst solve =\n  (parsingFn: (input: string) => number[][]) => (rawInput: string) => {\n    return parsingFn(rawInput).filter(([a, b, c]) => a + b > c).length\n  }\n\nrun({\n  part1: {\n    tests: [\n      {\n        input: `\n          5 10 25\n          5 6 9 \n        `,\n        expected: 1,\n      },\n    ],\n    solution: solve(parseInputPart1),\n  },\n  part2: {\n    tests: [\n      {\n        input: `\n          2 5 8\n          3 6 9\n          4 7 1\n        `,\n        expected: 2,\n      },\n    ],\n    solution: solve(parseInputPart2),\n  },\n})\n"],
  "mappings": "AAAA,OAAO,SAAS;AAChB,SAAS,cAAc;AACvB,SAAS,cAAc;AAEvB,MAAM,kBAAkB,CAAC,aACvB,SAAS,MAAM,IAAI,EAAE;AAAA,EAAI,CAAC,MACxB,EACG,KAAK,EACL,MAAM,KAAK,EACX,IAAI,MAAM,EACV,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC;AACzB;AAEF,MAAM,kBAAkB,CAAC,aACvB;AAAA,EACE;AAAA,EACA,OACG,KAAK,SAAS,MAAM,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,EACvE,QAAQ,EACR,KAAK;AACV,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC;AAEtC,MAAM,QACJ,CAAC,cAA6C,CAAC,aAAqB;AAClE,SAAO,UAAU,QAAQ,EAAE,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;AAC9D;AAEF,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA,QAIP,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,UAAU,MAAM,eAAe;AAAA,EACjC;AAAA,EACA,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,QAKP,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,UAAU,MAAM,eAAe;AAAA,EACjC;AACF,CAAC;",
  "names": []
}
