{
  "version": 3,
  "sources": ["../../src/utils/grid.ts"],
  "sourcesContent": ["/**\n * Rotate nested array (2d grid)\n */\nexport const rotate = {\n  right<T>(arr: T[][]) {\n    const width = arr[0].length\n    const height = arr.length\n    const rotated = Array.from({ length: width }, () => new Array(height))\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        rotated[x][height - y - 1] = arr[y][x]\n      }\n    }\n\n    return rotated\n  },\n\n  left<T>(arr: T[][]) {\n    const width = arr[0].length\n    const height = arr.length\n    const rotated = Array.from({ length: width }, () => new Array(height))\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        rotated[width - x - 1][y] = arr[y][x]\n      }\n    }\n\n    return rotated\n  },\n\n  by180<T>(arr: T[][]) {\n    return arr.reverse().map((row) => row.reverse())\n  },\n}\n\n/**\n * Flip nested array (2d grid)\n */\nexport const flip = {\n  vertically<T>(arr: T[][]) {\n    return arr.reverse()\n  },\n\n  horizontally<T>(arr: T[][]) {\n    return arr.map((row) => row.reverse())\n  },\n}\n\nexport default {\n  rotate,\n  flip,\n}\n"],
  "mappings": "AAGO,MAAM,SAAS;AAAA,EACpB,MAAS,KAAY;AACnB,UAAM,QAAQ,IAAI,GAAG;AACrB,UAAM,SAAS,IAAI;AACnB,UAAM,UAAU,MAAM,KAAK,EAAE,QAAQ,MAAM,GAAG,MAAM,IAAI,MAAM,MAAM,CAAC;AAErE,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,eAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,gBAAQ,GAAG,SAAS,IAAI,KAAK,IAAI,GAAG;AAAA,MACtC;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,KAAQ,KAAY;AAClB,UAAM,QAAQ,IAAI,GAAG;AACrB,UAAM,SAAS,IAAI;AACnB,UAAM,UAAU,MAAM,KAAK,EAAE,QAAQ,MAAM,GAAG,MAAM,IAAI,MAAM,MAAM,CAAC;AAErE,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,eAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,gBAAQ,QAAQ,IAAI,GAAG,KAAK,IAAI,GAAG;AAAA,MACrC;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAS,KAAY;AACnB,WAAO,IAAI,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;AAAA,EACjD;AACF;AAKO,MAAM,OAAO;AAAA,EAClB,WAAc,KAAY;AACxB,WAAO,IAAI,QAAQ;AAAA,EACrB;AAAA,EAEA,aAAgB,KAAY;AAC1B,WAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;AAAA,EACvC;AACF;AAEA,IAAO,eAAQ;AAAA,EACb;AAAA,EACA;AACF;",
  "names": []
}
