{
  "version": 3,
  "sources": ["../../src/day04/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\"\n\ntype RoomData = {\n  name: string\n  checksum: string\n  id: number\n}\n\nconst parseInput = (rawInput: string) => {\n  const lines = rawInput.split(\"\\n\")\n\n  const entries = lines.map((line) => {\n    const chunks = line.match(/[a-z]+/g)\n    const name = chunks?.slice(0, -1).join(\"-\") as string\n    const checksum = chunks?.slice(-1)[0] as string\n    const id = Number((line.match(/\\d+/) ?? [])[0])\n\n    return { name, checksum, id }\n  })\n\n  return entries\n}\n\nconst getRealRooms = (input: RoomData[]) => {\n  return input.filter(({ name, checksum }) => {\n    const occurrences = new Map<string, number>()\n\n    const letters = name.replace(/\\-/g, \"\")\n\n    for (const letter of letters) {\n      occurrences.set(letter, (occurrences.get(letter) ?? 0) + 1)\n    }\n\n    const actualChecksum = [...occurrences.entries()]\n      .sort((a, b) => b[1] - a[1] || a[0].localeCompare(b[0]))\n      .map(([k]) => k)\n      .slice(0, 5)\n      .join(\"\")\n\n    return actualChecksum === checksum\n  })\n}\n\nconst part1 = (rawInput: string) => {\n  const input = parseInput(rawInput)\n\n  return getRealRooms(input).reduce((acc, { id }) => acc + id, 0)\n}\n\nconst part2 = (rawInput: string) => {\n  const input = parseInput(rawInput)\n  const ALPHABET_LENGTH = 26\n  const ASCII_OFFSET = 97\n\n  for (const { name, id } of getRealRooms(input)) {\n    const realName = [...name]\n      .map((v) =>\n        v === \"-\"\n          ? \" \"\n          : String.fromCharCode(\n              ((v.charCodeAt(0) - ASCII_OFFSET + id) % ALPHABET_LENGTH) +\n                ASCII_OFFSET,\n            ),\n      )\n      .join(\"\")\n\n    if (realName.includes(\"north\")) {\n      return id\n    }\n  }\n}\n\nrun({\n  part1: {\n    tests: [\n      {\n        input: `\n          aaaaa-bbb-z-y-x-123[abxyz]\n          a-b-c-d-e-f-g-h-987[abcde]\n          not-a-real-room-404[oarel]\n          totally-real-room-200[decoy]\n        `,\n        expected: 1514,\n      },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      {\n        input: `\n          qzmt-zixmtkozy-ivhz-343[zimth]\n          north-pole-26[oehln]\n        `,\n        expected: 26,\n      },\n    ],\n    solution: part2,\n  },\n})\n"],
  "mappings": "AAAA,OAAO,SAAS;AAQhB,MAAM,aAAa,CAAC,aAAqB;AACvC,QAAM,QAAQ,SAAS,MAAM,IAAI;AAEjC,QAAM,UAAU,MAAM,IAAI,CAAC,SAAS;AAClC,UAAM,SAAS,KAAK,MAAM,SAAS;AACnC,UAAM,OAAO,iCAAQ,MAAM,GAAG,IAAI,KAAK;AACvC,UAAM,WAAW,iCAAQ,MAAM,IAAI;AACnC,UAAM,KAAK,QAAQ,KAAK,MAAM,KAAK,KAAK,CAAC,GAAG,EAAE;AAE9C,WAAO,EAAE,MAAM,UAAU,GAAG;AAAA,EAC9B,CAAC;AAED,SAAO;AACT;AAEA,MAAM,eAAe,CAAC,UAAsB;AAC1C,SAAO,MAAM,OAAO,CAAC,EAAE,MAAM,SAAS,MAAM;AAC1C,UAAM,cAAc,oBAAI,IAAoB;AAE5C,UAAM,UAAU,KAAK,QAAQ,OAAO,EAAE;AAEtC,eAAW,UAAU,SAAS;AAC5B,kBAAY,IAAI,SAAS,YAAY,IAAI,MAAM,KAAK,KAAK,CAAC;AAAA,IAC5D;AAEA,UAAM,iBAAiB,CAAC,GAAG,YAAY,QAAQ,CAAC,EAC7C,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,cAAc,EAAE,EAAE,CAAC,EACtD,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EACd,MAAM,GAAG,CAAC,EACV,KAAK,EAAE;AAEV,WAAO,mBAAmB;AAAA,EAC5B,CAAC;AACH;AAEA,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW,QAAQ;AAEjC,SAAO,aAAa,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,GAAG,MAAM,MAAM,IAAI,CAAC;AAChE;AAEA,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW,QAAQ;AACjC,QAAM,kBAAkB;AACxB,QAAM,eAAe;AAErB,aAAW,EAAE,MAAM,GAAG,KAAK,aAAa,KAAK,GAAG;AAC9C,UAAM,WAAW,CAAC,GAAG,IAAI,EACtB;AAAA,MAAI,CAAC,MACJ,MAAM,MACF,MACA,OAAO;AAAA,SACH,EAAE,WAAW,CAAC,IAAI,eAAe,MAAM,kBACvC;AAAA,MACJ;AAAA,IACN,EACC,KAAK,EAAE;AAEV,QAAI,SAAS,SAAS,OAAO,GAAG;AAC9B,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAEA,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMP,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,UAAU;AAAA,EACZ;AAAA,EACA,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA,QAIP,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,UAAU;AAAA,EACZ;AACF,CAAC;",
  "names": []
}
