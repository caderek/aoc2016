{
  "version": 3,
  "sources": ["../../src/day02/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\"\n\nconst parseInput = (rawInput: string) =>\n  rawInput.split(\"\\n\").map((x) => x.split(\"\"))\n\nconst dirs = {\n  U: [0, -1],\n  R: [1, 0],\n  D: [0, 1],\n  L: [-1, 0],\n}\n\nconst keypad = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n]\n\nconst keypad2 = [\n  [0, 0, 1, 0, 0],\n  [0, 2, 3, 4, 0],\n  [5, 6, 7, 8, 9],\n  [0, \"A\", \"B\", \"C\", 0],\n  [0, 0, \"D\", 0, 0],\n]\n\nconst solution =\n  (keypad: any[][], startX: number, startY: number) =>\n  async (rawInput: string) => {\n    const input = parseInput(rawInput)\n    let x = startX\n    let y = startY\n\n    const nums = input.map((line) => {\n      for (const move of line) {\n        const [dX, dY] = dirs[move as \"U\" | \"R\" | \"D\" | \"L\"]\n        const newX = x + dX\n        const newY = y + dY\n\n        if (keypad[newY]?.[newX]) {\n          x = newX\n          y = newY\n        }\n      }\n\n      return keypad[y][x]\n    })\n\n    return nums.join(\"\")\n  }\n\nrun({\n  part1: {\n    tests: [\n      {\n        input: `\n          ULL\n          RRDDD\n          LURDL\n          UUUUD\n        `,\n        expected: \"1985\",\n      },\n    ],\n    solution: solution(keypad, 1, 1),\n  },\n  part2: {\n    tests: [\n      {\n        input: `\n          ULL\n          RRDDD\n          LURDL\n          UUUUD\n        `,\n        expected: \"5DB3\",\n      },\n    ],\n    solution: solution(keypad2, 0, 2),\n  },\n  trimTestInputs: true,\n})\n"],
  "mappings": "AAAA;AAEA,MAAM,aAAa,CAAC,aAClB,SAAS,MAAM,MAAM,IAAI,CAAC,MAAM,EAAE,MAAM;AAE1C,MAAM,OAAO;AAAA,EACX,GAAG,CAAC,GAAG;AAAA,EACP,GAAG,CAAC,GAAG;AAAA,EACP,GAAG,CAAC,GAAG;AAAA,EACP,GAAG,CAAC,IAAI;AAAA;AAGV,MAAM,SAAS;AAAA,EACb,CAAC,GAAG,GAAG;AAAA,EACP,CAAC,GAAG,GAAG;AAAA,EACP,CAAC,GAAG,GAAG;AAAA;AAGT,MAAM,UAAU;AAAA,EACd,CAAC,GAAG,GAAG,GAAG,GAAG;AAAA,EACb,CAAC,GAAG,GAAG,GAAG,GAAG;AAAA,EACb,CAAC,GAAG,GAAG,GAAG,GAAG;AAAA,EACb,CAAC,GAAG,KAAK,KAAK,KAAK;AAAA,EACnB,CAAC,GAAG,GAAG,KAAK,GAAG;AAAA;AAGjB,MAAM,WACJ,CAAC,SAAiB,QAAgB,WAClC,OAAO,aAAqB;AAC1B,QAAM,QAAQ,WAAW;AACzB,MAAI,IAAI;AACR,MAAI,IAAI;AAER,QAAM,OAAO,MAAM,IAAI,CAAC,SAAS;AAjCrC;AAkCM,eAAW,QAAQ,MAAM;AACvB,YAAM,CAAC,IAAI,MAAM,KAAK;AACtB,YAAM,OAAO,IAAI;AACjB,YAAM,OAAO,IAAI;AAEjB,UAAI,cAAO,UAAP,mBAAe,OAAO;AACxB,YAAI;AACJ,YAAI;AAAA;AAAA;AAIR,WAAO,QAAO,GAAG;AAAA;AAGnB,SAAO,KAAK,KAAK;AAAA;AAGrB,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU,SAAS,QAAQ,GAAG;AAAA;AAAA,EAEhC,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU,SAAS,SAAS,GAAG;AAAA;AAAA,EAEjC,gBAAgB;AAAA;",
  "names": []
}
